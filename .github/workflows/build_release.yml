name: Build and Release

on:
  release:
    types: [created]  # Trigger when a new release is published

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Install dependencies
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libcurl4-openssl-dev

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          # CMake is already installed on GitHub macOS runners
          brew install curl || true  # install curl if not present

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cmake curl -y

      # 3. Configure CMake
      - name: Configure CMake
        run: cmake -S . -B build

      # 4. Build the project
      - name: Build
        run: cmake --build build --config Release

      # 5. Prepare release artifacts
      - name: Package executable
        run: |
          mkdir -p release
          if [ "${{ runner.os }}" == "Windows" ]; then
            cp build/Release/metar.exe release/
          else
            cp build/metar release/
          fi

      # 6. Upload executable to GitHub Release
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
